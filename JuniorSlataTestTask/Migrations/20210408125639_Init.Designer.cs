// <auto-generated />
using System;
using JuniorSlataTestTask;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace JuniorSlataTestTask.Migrations
{
    [DbContext(typeof(AppContext))]
    [Migration("20210408125639_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("JuniorSlataTestTask.Data.Models.Jobseaker", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Managerid")
                        .HasColumnType("int");

                    b.Property<int?>("Mentorid")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Position")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TaskId")
                        .HasColumnType("int");

                    b.Property<string>("TimeToTask")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("Managerid");

                    b.HasIndex("Mentorid");

                    b.HasIndex("TaskId")
                        .IsUnique();

                    b.ToTable("Jobseakers");
                });

            modelBuilder.Entity("JuniorSlataTestTask.Data.Models.Task", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Completeness")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DateTimeEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateTimeStart")
                        .HasColumnType("datetime2");

                    b.HasKey("id");

                    b.ToTable("Tasks");
                });

            modelBuilder.Entity("JuniorSlataTestTask.User", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Login")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Permission")
                        .HasColumnType("int");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("JuniorSlataTestTask.Data.Models.Jobseaker", b =>
                {
                    b.HasOne("JuniorSlataTestTask.User", "Manager")
                        .WithMany()
                        .HasForeignKey("Managerid");

                    b.HasOne("JuniorSlataTestTask.User", "Mentor")
                        .WithMany()
                        .HasForeignKey("Mentorid");

                    b.HasOne("JuniorSlataTestTask.Data.Models.Task", "Task")
                        .WithOne("Jobseaker")
                        .HasForeignKey("JuniorSlataTestTask.Data.Models.Jobseaker", "TaskId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Manager");

                    b.Navigation("Mentor");

                    b.Navigation("Task");
                });

            modelBuilder.Entity("JuniorSlataTestTask.Data.Models.Task", b =>
                {
                    b.Navigation("Jobseaker");
                });
#pragma warning restore 612, 618
        }
    }
}
